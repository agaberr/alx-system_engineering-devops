#!/bin/bash

# Install HAProxy
sudo apt-get update
sudo apt-get install -y haproxy

# Install Certbot
sudo apt-get install -y certbot

# Obtain SSL certificate
sudo certbot certonly --standalone -d www.emmastro.tech

# Configure HAProxy
sudo tee /etc/haproxy/haproxy.cfg > /dev/null <<EOF
# /etc/haproxy/haproxy.cfg

# Default ciphers to use on SSL-enabled listening sockets.
# For more information, see ciphers(1SSL).
# This list is from: https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
# An alternative list with additional directives can be obtained from
# https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
ssl-default-bind-options no-sslv3

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend www
    bind *:80
    bind *:443 ssl crt /etc/letsencrypt/live/www.emmastro.tech/fullchain.pem
    http-response set-header Strict-Transport-Security max-age=31536000;
    use_backend www-backend

backend www-backend
    balance roundrobin
    option httpclose
    option forwardfor
    server 531068-web-01 34.232.67.61:80 check
    server 531068-web-02 100.26.121.140:80 check
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
EOF

# Restart HAProxy
sudo systemctl restart haproxy

